<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.danchey.traffic.mapper.NormalintersectionMapper" >
  <resultMap id="BaseResultMap" type="com.danchey.traffic.pojo.Normalintersection" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="surveyTime" property="surveytime" jdbcType="DATE" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="investigator" property="investigator" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="intoNumber" property="intonumber" jdbcType="INTEGER" />
    <result column="intoWidth" property="intowidth" jdbcType="DECIMAL" />
    <result column="areaType_id" property="areatypeId" jdbcType="INTEGER" />
    <result column="controlType_id" property="controltypeId" jdbcType="INTEGER" />
    <result column="coordinate" property="coordinate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, surveyTime, createTime, updateTime, creater, investigator, name, intoNumber, 
    intoWidth, areaType_id, controlType_id, coordinate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.danchey.traffic.pojo.NormalintersectionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from normalintersection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from normalintersection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from normalintersection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.danchey.traffic.pojo.NormalintersectionExample" >
    delete from normalintersection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.danchey.traffic.pojo.Normalintersection" >
    insert into normalintersection (id, surveyTime, createTime, 
      updateTime, creater, investigator, 
      name, intoNumber, intoWidth, 
      areaType_id, controlType_id, coordinate
      )
    values (#{id,jdbcType=INTEGER}, #{surveytime,jdbcType=DATE}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{creater,jdbcType=VARCHAR}, #{investigator,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{intonumber,jdbcType=INTEGER}, #{intowidth,jdbcType=DECIMAL}, 
      #{areatypeId,jdbcType=INTEGER}, #{controltypeId,jdbcType=INTEGER}, #{coordinate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.danchey.traffic.pojo.Normalintersection" >
    insert into normalintersection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="surveytime != null" >
        surveyTime,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="investigator != null" >
        investigator,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="intonumber != null" >
        intoNumber,
      </if>
      <if test="intowidth != null" >
        intoWidth,
      </if>
      <if test="areatypeId != null" >
        areaType_id,
      </if>
      <if test="controltypeId != null" >
        controlType_id,
      </if>
      <if test="coordinate != null" >
        coordinate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="surveytime != null" >
        #{surveytime,jdbcType=DATE},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="investigator != null" >
        #{investigator,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="intonumber != null" >
        #{intonumber,jdbcType=INTEGER},
      </if>
      <if test="intowidth != null" >
        #{intowidth,jdbcType=DECIMAL},
      </if>
      <if test="areatypeId != null" >
        #{areatypeId,jdbcType=INTEGER},
      </if>
      <if test="controltypeId != null" >
        #{controltypeId,jdbcType=INTEGER},
      </if>
      <if test="coordinate != null" >
        #{coordinate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.danchey.traffic.pojo.NormalintersectionExample" resultType="java.lang.Integer" >
    select count(*) from normalintersection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update normalintersection
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.surveytime != null" >
        surveyTime = #{record.surveytime,jdbcType=DATE},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.investigator != null" >
        investigator = #{record.investigator,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.intonumber != null" >
        intoNumber = #{record.intonumber,jdbcType=INTEGER},
      </if>
      <if test="record.intowidth != null" >
        intoWidth = #{record.intowidth,jdbcType=DECIMAL},
      </if>
      <if test="record.areatypeId != null" >
        areaType_id = #{record.areatypeId,jdbcType=INTEGER},
      </if>
      <if test="record.controltypeId != null" >
        controlType_id = #{record.controltypeId,jdbcType=INTEGER},
      </if>
      <if test="record.coordinate != null" >
        coordinate = #{record.coordinate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update normalintersection
    set id = #{record.id,jdbcType=INTEGER},
      surveyTime = #{record.surveytime,jdbcType=DATE},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      creater = #{record.creater,jdbcType=VARCHAR},
      investigator = #{record.investigator,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      intoNumber = #{record.intonumber,jdbcType=INTEGER},
      intoWidth = #{record.intowidth,jdbcType=DECIMAL},
      areaType_id = #{record.areatypeId,jdbcType=INTEGER},
      controlType_id = #{record.controltypeId,jdbcType=INTEGER},
      coordinate = #{record.coordinate,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.danchey.traffic.pojo.Normalintersection" >
    update normalintersection
    <set >
      <if test="surveytime != null" >
        surveyTime = #{surveytime,jdbcType=DATE},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="investigator != null" >
        investigator = #{investigator,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="intonumber != null" >
        intoNumber = #{intonumber,jdbcType=INTEGER},
      </if>
      <if test="intowidth != null" >
        intoWidth = #{intowidth,jdbcType=DECIMAL},
      </if>
      <if test="areatypeId != null" >
        areaType_id = #{areatypeId,jdbcType=INTEGER},
      </if>
      <if test="controltypeId != null" >
        controlType_id = #{controltypeId,jdbcType=INTEGER},
      </if>
      <if test="coordinate != null" >
        coordinate = #{coordinate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.danchey.traffic.pojo.Normalintersection" >
    update normalintersection
    set surveyTime = #{surveytime,jdbcType=DATE},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=VARCHAR},
      investigator = #{investigator,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      intoNumber = #{intonumber,jdbcType=INTEGER},
      intoWidth = #{intowidth,jdbcType=DECIMAL},
      areaType_id = #{areatypeId,jdbcType=INTEGER},
      controlType_id = #{controltypeId,jdbcType=INTEGER},
      coordinate = #{coordinate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>